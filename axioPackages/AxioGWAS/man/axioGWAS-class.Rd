% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/axioGWAS-class.R
\docType{class}
\name{axioGWAS-class}
\alias{axioGWAS-class}
\title{axioGWAS class}
\description{
The Class of an object to store all the data and parameters necessary to run a GWAS, as well as present the results. To create the object, use the new('axioGWAS') command.
}

\examples{
\dontrun{
examplePGx<-data.frame(var1=c(1,1,1,2,2,2,1,2),var2=c(2,2,2,3,3,3,3,2),var3=c(3,3,3,4,4,4,3,2),gender=c("Male","Female","Male","Female","Male","Female","Male","Male"))
exampleSNP<-matrix(c("A/A","A/B","A/A","A/B","B/B","A/A","A/A","B/B","A/A","A/B","A/A","A/A","B/B","B/B","A/A","B/B","A/A","A/B","A/A","A/B","B/B","A/B","A/A","B/B",
"A/A","A/B","A/A","A/B","B/B","A/A","A/A","B/B","A/A","A/B","A/A","A/A","B/B","B/B","A/A","B/B","A/A","A/B","A/A","A/B","B/B","A/B","A/A","B/B",
"A/A","A/B","A/A","A/B","B/B","A/A","A/A","B/B","A/A","A/B","A/A","A/A","B/B","B/B","A/A","B/B","A/A","A/B","A/A","A/B","B/B","A/B","A/A","B/B"),
nrow=9,byrow=TRUE,dimnames=list(c("snp1","snp2","snp3","snp4","snp5","snp6","snp7","snp8","snp9")))
exampleSNPInfo<-data.frame(Chr=c(1,1,1,2,2,2,3,3,3),Pos=c(1,2,3,1,2,3,1,2,3),row.names = c("snp1","snp2","snp3","snp4","snp5","snp6","snp7","snp8","snp9"))
exampleModel<-formula("var1~var2+var3+gender")

axioGWAS<-new('axioGWAS')
axioGWAS$genotypes<-exampleSNP
axioGWAS$phenotypes<-examplePGx
axioGWAS$genderVar<-'gender'
axioGWAS$interactionTerm<-'var2'
axioGWAS$snpFeatures<-exampleSNPInfo
axioGWAS$chromosomeVar<-'Chr'
axioGWAS$positionVar<-'Pos'
axioGWAS$model<-exampleModel
axioGWAS$database_path<-"runGWAS.DB"
axioGWAS$database_table<-"runGWAS_Test"
axioGWAS$overwritepreviousEntry<-TRUE
axioGWAS$functionArgs<-list(snpInfo=exampleSNPInfo)

axioGWAS$runFilter()

axioGWAS$runGWAS()

gwasRes<-runGWAS(pgx=examplePGx,snp=exampleSNP,Model=exampleModel,func = gwasFunc,interactionTerm="var2",genderVar="gender",databasePath="runGWAS.DB", dbTable="runGWAS_Test2", snpInfo=exampleSNPInfo, overwriteEntry=TRUE)
gwasRes$adjPVals$SnPName<-rownames(gwasRes$adjPVals)
colnames(gwasRes$adjPVals)<-c('Pvalue','AdjustedPvalue','SNPName')
gwasRes$adjPVals<-gwasRes$adjPVals[,c('SNPName','Pvalue','AdjustedPvalue')]
identical(axioGWAS$pvalues,gwasRes$adjPVals)

axioGWAS$manhattanPlot(hexBins = FALSE)

snp1Model<-axioGWAS$extractSNPResult("snp1")


}
}
